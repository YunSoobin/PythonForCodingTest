def find_parent(parent, x):
  if parent[x] != x:
    parent[x] = find_parent(parent, parent[x])
  return parent[x]

def union_parent(parent, a, b):
  a = find_parent(parent, a)
  b = find_parent(parent, b)
  if a < b:
    parent[b] = a
  else:
    parent[a] = b


N, M = map(int, input().split())
parent = [i for i in range(N + 1)]
cities = []
all_distance = 0
last_distance = 0

for _ in range(M):
  A, B, C = map(int, input().split())
  cities.append((C, A, B))
  
cities.sort()
for city in cities:
  distance, a, b = city
  if find_parent(parent, a) != find_parent(parent, b):
    union_parent(parent, a, b)
    all_distance += distance
    last_distance = distance
    

print(all_distance - last_distance)
