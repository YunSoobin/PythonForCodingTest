import heapq

N, M, C = map(int, input().split())

INF = int(1e9)
city = [[INF] * (N + 1) for _ in range(N + 1)]

visited = [False] * (N + 1)
time = 0
q = []

for _ in range(M):
  X, Y, Z = map(int, input().split())
  city[X][Y] = Z

heapq.heappush(q, C)
while q:
  start = heapq.heappop(q)
  
  for i in range(1, N + 1):
    if city[start][i] != INF:
      heapq.heappush(q, i)
      city[C][i] = min(city[C][i], city[C][start] + city[start][i])
      
      visited[i] = True
      time = max(time, city[C][i])

print(visited.count(True), time)
